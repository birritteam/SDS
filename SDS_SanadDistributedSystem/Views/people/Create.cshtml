@model SDS_SanadDistributedSystem.Models.person

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Ajax.BeginForm("Create","people",
    new AjaxOptions { OnSuccess= "SuccessLoadForPerson", OnFailure = "FailureLoadForPerson" }, new  {@id= "personCreationForm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal" >
        <h4>person</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <label class = "control-label col-md-2">موقع الشخص ضمن العائلة:</label>
            <div class="col-md-10">
                @*<input type="radio" id="personPositionSelect" name="personPositionSelect" value="H" />زوج
                <input type="radio" id="personPositionSelect" name="personPositionSelect" value="W" />زوجة
                <input type="radio" id="personPositionSelect" name="personPositionSelect" value="C" />ابن(ة)*@

                <select class="form-control" id="personPositionSelect" dir="rtl">
                    <option></option>
                    <option value="H">زوج</option>
                    <option value="W">زوجة</option>
                    <option value="C">ولد</option>
                </select>
                
                <input type="number" id="wifeOrder" class="form-control hidden"  min="1" max="4" />
                <input type="number" id="childOrder"  class="hidden form-control" min="1" max="20" />
                
            </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.idperson, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.idperson, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idperson, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.lname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fathername, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.fathername, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fathername, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mothername, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.mothername, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.mothername, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-3">
                <div class="md-form">
                    @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control validate datepicker", @type = "text" } })
                    @Html.LabelFor(model => model.birthday, htmlAttributes: new { @class = "" })
                    @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.birthplace, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.birthplace, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.birthplace, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.gender, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (string item in ViewBag.genderOptions)
                    {
                        @Html.RadioButtonFor(model => model.gender, item , new {  @id = item})
                        @Html.Label(item, new { @for = item })
                    }                 
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.nationality, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("nationality",new SelectList(ViewBag.nationalityOptions), htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.martial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("martial", new SelectList(ViewBag.martialOptions), htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.relationtype, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("relationtype", new SelectList(ViewBag.relationtype), htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.onoffflag, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    
                    @Html.EditorFor(model => model.onoffflag, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.onoffflag, "", new { @class = "text-danger" })
                </div>
            </div>*@
        
        <input type="hidden" name="onoffflag" id="onoffflag" value="online"/>

            <div class="form-group">
                @Html.LabelFor(model => model.education, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("education", new SelectList(ViewBag.education), htmlAttributes: new { })       
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.educationstate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @foreach (string item in ViewBag.educationstate)
                    {
                        @Html.RadioButtonFor(model => model.educationstate, item , new  { @id = item})
                        @Html.Label(item, new { @for = item })
                    }
                    @Html.ValidationMessageFor(model => model.educationstate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phone1, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phone1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.phone2, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.phone2, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.phone2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.currentaddress, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.currentaddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.currentaddress, "", new { @class = "text-danger" })
                </div>
            </div>


        <input type="hidden" name="registrationdate" id="registrationdate"/>
            @*<div class="form-group">
                @Html.LabelFor(model => model.registrationdate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.registrationdate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.registrationdate, "", new { @class = "text-danger" })
                </div>
            </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.idfamily_FK, "idfamily_FK", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model=>model.idfamily_FK, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.idfamily_FK, "", new { @class = "text-danger" })
                </div>
            </div>*@
        @*<div class="form-group">
            @Html.LabelFor(model => model.idcenter_FK, "idcenter_FK", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idcenter_FK", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idcenter_FK, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
                @Html.LabelFor(model => model.formnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.formnumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.formnumber, "", new { @class = "text-danger" })
                </div>
            </div>*@
        
        @*<div class="form-group">
            @Html.LabelFor(model => model.iduser, "iduser", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("iduser", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.iduser, "", new { @class = "text-danger" })
            </div>
        </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.note, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.note, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
                </div>
            </div>


        <div class="form-group">
            <label class="control-label col-md-2">العمل الحالي</label>
            <div class="col-md-10">
                @Html.DropDownList("currentWorkID", null, htmlAttributes: new { @class = "form-control" })    
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">العمل السابق</label>
            <div class="col-md-10">
                @Html.DropDownList("previousWorkID", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

            
        <input type="hidden" name="idfamily_FK" id="idfamily_FK" />
        <input type="hidden" name="idcenter_FK" id="idcenter_FK" />
        <input type="hidden" name="iduser" id="iduser" />
            <div class="form-group">
                @Html.LabelFor(model => model.nationalnumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.nationalnumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.nationalnumber, "", new { @class = "text-danger" })
                </div>
            </div>
        <div class="form-group">
            <label class="control-label col-md-2">طريقة التعرف على المركز</label>
            <div class="col-md-10">
                @Html.DropDownList("idKnowledgeCenter", null, htmlAttributes: new { @class = "selectpicker" })
            </div>
        </div>
        <div class="form-group">
            @foreach (var weakness in ViewBag.weaknesses)
            {
                foreach (var item in weakness)

                {       <div class="col-md-3">
                            <div class="form-group">
                                <input type="checkbox" name="weaknesses" value="@item.idmanagelist" id="@item.idmanagelist" />
                                <label for="@item.idmanagelist">@item.name</label>
                            </div>
                        </div>
                }
                }


            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        <div>

            <table class="table" id="familymembers">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.idperson)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.fname)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.lname)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.fathername)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.mothername)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.birthday)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.birthplace)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.gender)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.nationality)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.martial)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.relationtype)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.onoffflag)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.education)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.educationstate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.phone1)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.phone2)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.currentaddress)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.registrationdate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.formnumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.note)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.AspNetUser.Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.center.name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.family.idfamily)
                    </th>
                    <th></th>
                </tr>
                @foreach (var item in Model.family.people)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.idperson)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.nationalnumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.fname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.lname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.fathername)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.mothername)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.birthday)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.birthplace)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.nationality)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.martial)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.relationtype)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.onoffflag)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.education)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.educationstate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.phone1)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.phone2)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.currentaddress)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.registrationdate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.formnumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.note)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.AspNetUser.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.center.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.family.idfamily)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.idperson }) |
                            @Html.ActionLink("Details", "Details", new { id = item.idperson }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.idperson })
                        </td>
                    </tr>
                }

            </table>
        </div>
        </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var idFamily;
        var type;

        $(document).ready(function () {
            idFamily = $("#idperson").val();

            //$('#idfamily_FK option:contains(' + idFamily + ')').attr('selected', true)
            $('#idfamily_FK').val(idFamily);
 
        });

        $("#personPositionSelect").on("change", function () {
 
            type = $("#personPositionSelect").val();

            switch (type) {
                case "C":
                    $("#childOrder").removeClass("hidden");
                    $("#wifeOrder").addClass("hidden");
                    break;
                case "W": 
                    $("#wifeOrder").removeClass("hidden");
                    $("#childOrder").addClass("hidden");
                    break;
                default:
                    $("#wifeOrder").addClass("hidden");
                    $("#childOrder").addClass("hidden");
            }

           $("#idperson").val(idFamily + type);
        });

        $("#childOrder").on("change", function () {
            
            var childOrder = $("#childOrder").val();
            $("#idperson").val(idFamily + type + childOrder);

        });

        $("#wifeOrder").on("change", function () {
            var wifeOrder = $("#wifeOrder").val();
            $("#idperson").val(idFamily + type + wifeOrder);
        });


        //$("#idfamily_FK option").val(idFamily)
        //$('#idfamily_FK option').filter(function () { return $(this).html() == idFamily; }).val();
        
        
    </script>
}
