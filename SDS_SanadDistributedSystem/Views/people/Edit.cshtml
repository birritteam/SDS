@model SDS_SanadDistributedSystem.Models.person

@{
    ViewBag.Title = "تعديل شخص";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>تعديل بيانات المستفيد: @Model.idperson</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<input type="hidden" value="@Model.idperson" id="idperson"/>*@
        @Html.HiddenFor(model => model.idperson)
        <div class="row">
            <div class="col-md-3">
                <div class="md-form">
                    @Html.EditorFor(model => model.fname, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.fname, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.fname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="md-form">
                    @Html.EditorFor(model => model.lname, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.lname, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.lname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="md-form">
                    @Html.EditorFor(model => model.fathername, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.fathername, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.fathername, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="md-form">
                    @Html.EditorFor(model => model.mothername, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.mothername, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.mothername, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-1"><label>تاريخ الميلاد</label></div>
            <div class="col-md-3">
                <div class="md-form">
                    @Html.EditorFor(model => model.birthday, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.ValidationMessageFor(model => model.birthday, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="md-form">
                    @Html.EditorFor(model => model.birthplace, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.birthplace, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.birthplace, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="md-form">
                    @Html.EditorFor(model => model.nationalnumber, new { htmlAttributes = new { @class = "form-control validate", @id = "nationalnumber", @length = "11", @style = "direction: ltr;" } })
                    @Html.LabelFor(model => model.nationalnumber, htmlAttributes: new { @for = "nationalnumber" })
                    @Html.ValidationMessageFor(model => model.nationalnumber, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="md-form ui-widget ">
                    @Html.EditorFor(model => model.currentaddress, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.currentaddress, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.currentaddress, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="md-form">
                    @Html.EditorFor(model => model.phone1, new { htmlAttributes = new { @class = "form-control validate", @id = "phone1", @length = "10", @style = "direction: ltr;" } })
                    @Html.LabelFor(model => model.phone1, htmlAttributes: new { @for = "phone1" })
                    @Html.ValidationMessageFor(model => model.phone1, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="md-form">
                    @Html.EditorFor(model => model.phone2, new { htmlAttributes = new { @class = "form-control validate", @id = "phone2", @length = "10", @style = "direction: ltr;" } })
                    @Html.LabelFor(model => model.phone2, htmlAttributes: new { @for = "phone2" })
                    @Html.ValidationMessageFor(model => model.phone2, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        
        
        <div class="row panel"></div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.nationality, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.DropDownList("nationality", new SelectList(ViewBag.nationalityOptions), htmlAttributes: new { @class = "col-md-8" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    @Html.DropDownList("martial", new SelectList(ViewBag.martialOptions), htmlAttributes: new { @class = "col-md-8" })
                    @Html.LabelFor(model => model.martial, htmlAttributes: new { @class = "control-label col-md-4" })
                </div>
            </div>

            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label col-md-4">طريقة التعرف على المركز</label>
                    @Html.DropDownList("idKnowledgeCenter", null, htmlAttributes: new { @class = "" })
                </div>
            </div>
        </div>


        <div class="row">
            @*<div class="col-md-2"></div>*@
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.education, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.DropDownList("education", new SelectList(ViewBag.educationOptions), htmlAttributes: new { })
                </div>
            </div>

            @*<div class="col-md-4">

            </div>*@
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.educationstate, htmlAttributes: new { @class = "control-label col-md-4" })
                    @foreach (string item in ViewBag.educationstateOptions)
                    {
                        @Html.RadioButtonFor(model => model.educationstate, item, new { @id = item })
                        @Html.Label(item, new { @for = item })
                    }
                    @Html.ValidationMessageFor(model => model.educationstate, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <input type="hidden" name="onoffflag" id="onoffflag" value="online" />
        <input type="hidden" name="registrationdate" id="registrationdate" />

        <div class="row">
            @*<div class="col-md-2"></div>*@
            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label col-md-4" for="currentWorkID">العمل الحالي</label>
                    @Html.DropDownList("currentWorkID", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

            @*<div class="col-md-4">
            </div>*@
            <div class="col-md-4">
                <div class="form-group">
                    <label class="control-label col-md-4" for="previousWorkID">العمل السابق</label>
                    @Html.DropDownList("previousWorkID", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

        </div>

        <div class="row">



        </div>

        <div class="row">
            @*<div class="col-md-2"></div>*@
            <div class="col-md-4">
                <div class="md-form">
                    @Html.EditorFor(model => model.applicant, new { htmlAttributes = new { @class = "form-control validate", @id = "applicant" } })
                    @Html.LabelFor(model => model.applicant, htmlAttributes: new { @for = "applicant" })
                    @Html.ValidationMessageFor(model => model.applicant, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.relationtype, htmlAttributes: new { @class = "control-label col-md-4" })
                    @Html.DropDownList("relationtype", new SelectList(ViewBag.relationtypeOptions), htmlAttributes: new { @class = "form-control" })
                </div>
            </div>

        </div>

        @*@Html.HiddenFor(model=>model.idfamily_FK)
            @Html.HiddenFor(model => model.idcenter_FK)*@
       @Html.HiddenFor(model => model.iduser)
        @Html.HiddenFor(model => model.onoffflag)
        @Html.HiddenFor(model => model.registrationdate)
        @Html.HiddenFor(model => model.gender)
        <div class="form-group row">
            <h4 class="h4">الوثائق</h4>
            @foreach (var document in ViewBag.documentsOptions)
                {
                <div class="col-md-4" dir="ltr">
                    <div class="checkbox-inline">
                        @if (ViewBag.selectedML.Contains(document.idmanagelist))
                        {
                            <input type="checkbox" name="documents" value="@document.idmanagelist" id="@document.idmanagelist" checked="checked"/>

                        }
                        else
                        {
                            <input type="checkbox" name="documents" value="@document.idmanagelist" id="@document.idmanagelist" />

                        }
                        <label for="@document.idmanagelist">@document.name</label>
                    </div>
                </div>
            }



        </div>

        <div class="form-group">
            <h4 class="h4">نقاط الضعف</h4>
            @foreach (var weakness in ViewBag.weaknesses)
            {//<div class="row">
                foreach (var item in weakness)

                {
                    <div class="col-md-4" dir="ltr">
                        <div class="checkbox-inline" dir="ltr">
                            @if (ViewBag.selectedML.Contains(item.idmanagelist))
                            {
                                <input type="checkbox" name="weaknesses" value="@item.idmanagelist" id="@item.idmanagelist" checked="checked" />
                            }
                            else
                            {
                                <input type="checkbox" name="weaknesses" value="@item.idmanagelist" id="@item.idmanagelist" />
                            }

                            <label for="@item.idmanagelist">@item.name</label>
                        </div>
                    </div>
                }
            //</div>
            }


        </div>


        <div class="row"></div>
        <hr/>
        <div class="row">
            @*@Html.LabelFor(model => model.evaluation, htmlAttributes: new { @class = "control-label h4" })

            <div class="md-form">
                @Html.RadioButtonFor(model => model.evaluation, 0, new { @id = "e" + 0 })
                @Html.Label(0 + " %", new { @for = "e" + 0 })
                @foreach (int item in ViewBag.evaluationValues)
                {
                    @Html.RadioButtonFor(model => model.evaluation, item, new { @id = "e" + item })
                    @Html.Label(item + " %", new { @for = "e" + item })
                }
                @Html.ValidationMessageFor(model => model.evaluation, "", new { @class = "text-danger" })
            </div>*@

            <div class="row">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.evaluation, htmlAttributes: new { })
                </div>
                <div>
                    <div class="range-field">
                        <input type="range" name="evaluation" id="evaluation" min="0" max="100" value="@Model.evaluation"/>
                    </div>
                </div>

            </div>
  <hr/>
            <div class="md-form row">

                @Html.TextAreaFor(model => model.note, new { @type = "text", @id = "note", @class = "md-textarea" })
                @Html.LabelFor(model => model.note, htmlAttributes: new { @for = "note" })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>

        </div>



        <div class="form-group">
            <div class="col-md-offset-5 col-md-7">
                <input type="submit" value="حفظ التعديلات" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("العودة إلى قائمة الأشخاص", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
