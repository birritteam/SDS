@model SDS_SanadDistributedSystem.Models.AspNetUser

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>تعديل</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>المستخدم</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.PasswordHash)

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.EmailConfirmed)
                        @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.PhoneNumberConfirmed)
                        @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.TwoFactorEnabled)
                        @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.LockoutEnabled)
                        @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.idcenter_FK, "المركز", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idcenter_FK", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idcenter_FK, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.enabled, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.enabled)
                        @Html.ValidationMessageFor(model => model.enabled, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.enabled, "تفعيل المستخدم", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{if (Model.enabled)
                    {
                      @Html.RadioButtonFor(model => model.enabled, true, new { @id = "تفعيل", @checked = "checked" })
                        @Html.Label("تفعيل", "تفعيل", new { @for = "تفعيل" })

                        @Html.RadioButtonFor(model => model.enabled, false, new { @id = "إلغاء تفعيل" })
                        @Html.Label("إلغاء تفعيل", "إلغاء تفعيل", new { @for = "إلغاء تفعيل" })
                        //ViewBag.enableOptions = true;
                        Model.enabled = true;

                    }
                    else
                    {
                @Html.RadioButtonFor(model => model.enabled, true, new { @id = "تفعيل", })
                @Html.Label("تفعيل", "تفعيل", new { @for = "تفعيل" })

                @Html.RadioButtonFor(model => model.enabled, false, new { @id = "إلغاء تفعيل" })
                @Html.Label("إلغاء تفعيل", "إلغاء تفعيل", new { @for = "إلغاء تفعيل", @checked = "checked" })
                        //ViewBag.enableOptions = false;
                        Model.enabled = false;
                    }
                    }
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.AspNetRoles, "صلاحيات المستخدم", htmlAttributes: new { @class = "control-label col-md-2" })
            @if (ViewBag.SelectedRolesId != null)
                {
                    foreach (var roleSelected in ViewBag.SelectedRolesId)
                    {
                    <input type="checkbox" name="currentSelectedRolesID" value="@roleSelected.Id" checked="checked" id="@roleSelected.NameAR" />
                        <label for="@roleSelected.NameAR">@roleSelected.NameAR</label>
                    //                @Html.CheckBox(Model.AspNetRoles.Single().Name ,true)
                }
            }
            @Html.LabelFor(model => model.AspNetRoles, "", htmlAttributes: new { @class = "control-label col-md-2" })
            @if (ViewBag.NotSelectedRolesId != null)
                {
                    foreach (var role in ViewBag.NotSelectedRolesId)
                    {
                    <input type="checkbox" name="currentSelectedRolesID" value="@role.Id" id="@role.NameAR" />
                        <label for="@role.NameAR">@role.NameAR</label>
                }
            }
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="حفظ" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("عودة إلى القائمة", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
