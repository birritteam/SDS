@model SDS_SanadDistributedSystem.Models.temporal
@{
    ViewBag.Title = "EditReferal";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>

    <link href="~/Content/cardview.css" rel="stylesheet" />

</head>
<h2></h2>
<section class="form-simple centered-content  ">

    <!--Form with header-->
    <div class="card" style="width: 100%; padding:15px; align-items:center">

        <!--Header-->
        <div class="header pt-3 grey lighten-2 centered-wrapper">

            <div class="row d-flex justify-content-start">
                <h2 class="deep-grey-text mt-3 mb-4 pb-1 mx-5 "><b> تعديل</b></h2>
            </div>
        </div>
        @{var item = Model;}
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal centered-wrapper">
                <h3>@item.fname @item.lname</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <input type="hidden" value="@Model.idperson" name="idperson" /> 
                @Html.HiddenFor(model => model.fname)
                @Html.HiddenFor(model => model.lname)
                @Html.HiddenFor(model => model.fathername)
                @Html.HiddenFor(model => model.mothername)
                @Html.HiddenFor(model => model.birthday)
                @Html.HiddenFor(model => model.birthplace)
                @Html.HiddenFor(model => model.gender)
                @Html.HiddenFor(model => model.nationality)
                @Html.HiddenFor(model => model.martial)
                @Html.HiddenFor(model => model.relationtype)
                @Html.HiddenFor(model => model.education)
                @Html.HiddenFor(model => model.educationstate)

                @Html.HiddenFor(model => model.phone1)

                @Html.HiddenFor(model => model.phone2)
                @Html.HiddenFor(model => model.currentaddress)
                @Html.HiddenFor(model => model.tempregistrationdate)
                @Html.HiddenFor(model => model.idcenter_FK)
                @Html.HiddenFor(model => model.formnumber)
                @Html.HiddenFor(model => model.note)
                @Html.HiddenFor(model => model.submittingdate)

                @Html.HiddenFor(model => model.onoffflag)
                @Html.HiddenFor(model => model.iduser_FK)


       
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.servicestate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.DropDownList("servicestate", null, htmlAttributes: new { @class = "form-control", @onchange = "FillReferalStateDropdown()" })
                        @Html.ValidationMessageFor(model => model.servicestate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.referalstate, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.DropDownList("referalstate", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.referalstate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.referalreicver_FK, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-4">
                        @Html.DropDownList("referalReciver_FK", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.referalreicver_FK, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class=" col-md-4">

                    <div class="md-form">
                        @Html.EditorFor(model => model.referaldate, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.referaldate, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.referaldate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class=" col-md-4">

                    <div class="md-form">
                        @Html.EditorFor(model => model.servicestartdate, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.servicestartdate, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.servicestartdate, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class=" col-md-4">

                    <div class="md-form">
                        @Html.EditorFor(model => model.serviceenddate, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.serviceenddate, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.serviceenddate, "", new { @class = "text-danger" })
                    </div>
                </div>
     

                <div class="col-md-4">
                    <div class="md-form">
                        @Html.EditorFor(model => model.recieverevalution, new { htmlAttributes = new { @class = "form-control validate col-md-4" } })
                        @Html.LabelFor(model => model.recieverevalution, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.recieverevalution, "", new { @class = "text-danger" })
                    </div>
                </div>

            

                <div class="col-md-4">
                    <div class="md-form">
                        @Html.EditorFor(model => model.outreachnote, new { htmlAttributes = new { @class = "form-control validate col-md-4" } })
                        @Html.LabelFor(model => model.outreachnote, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.outreachnote, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="حفظ" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>


    <!--/Form with header-->

</section>
<div>
    @Html.ActionLink("عودة إلى القائمة", "Index", "referalpersons", "","")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

      $(document).ready(function () {
          FillReferalStateDropdown();
      });
    </script>
}
