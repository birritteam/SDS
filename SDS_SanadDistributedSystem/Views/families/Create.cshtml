@model SDS_SanadDistributedSystem.Models.family

@{
    ViewBag.Title = "إضافة عائلة";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>إضافة عائلة جديدة</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-md-4">
                <div class="md-form">
                    @Html.EditorFor(model => model.idfamily, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.idfamily, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.idfamily, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-5">
                <div class="md-form">
                    @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.lastname, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-3">
                <div class="md-form">
                    @Html.EditorFor(model => model.personcount, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.personcount, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.personcount, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="row">
            <div class="form-group col-md-5">
                <label class="control-label col-md-4">نوع السكن</label>
                <div class="col-md-8">
                    @Html.DropDownList("idmangelist", null, htmlAttributes: new { @class = "form-control" })
                </div>
            </div>
            <div class="col-md-7">
                <div class="md-form">
                    @Html.EditorFor(model => model.currentaddress, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.currentaddress, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.currentaddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-5">
                @Html.LabelFor(model => model.familynature, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("familynature", new SelectList(ViewBag.familynatureValues), htmlAttributes: new { @class = "" })
                    @*<select id="familynature" name="familynature" class="form-control">
                        <option value="فرد من المجتمع المضيف">فرد من المجتمع المضيف</option>
                        <option value="نازح داخلي">نازح داخلي</option>
                        <option value="نازح داخلي عائد">نازح داخلي عائد</option>
                        <option value="لاجئ عائد إلى سورية">لاجئ عائد إلى سورية</option>
                        <option value="لاجئ أو طالب لجوء من دولة أخرى">لاجئ أو طالب لجوء من دولة أخرى</option>
                    </select>*@
                </div>
            </div>
            <div id="displacementdate" class="hidden">
                <div class="col-md-1"><label>تاريخ النزوح</label></div>
                <div class="col-md-2 md-form">
                    @Html.EditorFor(model => model.displacementdate, new { htmlAttributes = new { @class = "form-control validate" } })
                    @* , @type = "text"  *@
                    @*  @Html.LabelFor(model => model.displacementdate, htmlAttributes: new { })*@
                    @Html.ValidationMessageFor(model => model.displacementdate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-4 hidden" id="lastaddress">
                <div class="md-form">
                    @Html.EditorFor(model => model.lastaddress, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.lastaddress, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.lastaddress, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="md-form">
                    @Html.EditorFor(model => model.phone1, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.phone1, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.phone1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="md-form">
                    @Html.EditorFor(model => model.phone1owner, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.LabelFor(model => model.phone1owner, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.phone1owner, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="md-form">
                    @Html.EditorFor(model => model.phone2, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.phone2, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.phone2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="col-md-6">
                <div class="md-form">
                    @Html.EditorFor(model => model.phone2owner, new { htmlAttributes = new { @class = "form-control validate" } })
                    @Html.LabelFor(model => model.phone2owner, htmlAttributes: new { })
                    @Html.ValidationMessageFor(model => model.phone2owner, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.iduser, "iduser", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("iduser", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.iduser, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <input type="hidden" name="iduser" id="iduser" />



        <div class="row"></div>
        <div class="row">
            @Html.LabelFor(model => model.evaluation, htmlAttributes: new { @class = "control-label" })

            <div class="md-form">

                @Html.RadioButtonFor(model => model.evaluation, 0, new { @id = "e" + 0, @checked = "checked" })
                @Html.Label(0 + " %", new { @for = "e" + 0 })
                @foreach (int item in ViewBag.evaluationValues)
                {
                    @Html.RadioButtonFor(model => model.evaluation, item, new { @id = "e" + item })
                    @Html.Label(item + " %", new { @for = "e" + item })
                }
                @Html.ValidationMessageFor(model => model.evaluation, "", new { @class = "text-danger" })
            </div>


            <div class="md-form row">

                @Html.TextAreaFor(model => model.note, new { @type = "text", @id = "note", @class = "md-textarea" })
                @Html.LabelFor(model => model.note, htmlAttributes: new { @for = "note" })
                @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
            </div>

        </div>



        <div class="md-form">
            <div class="col-md-offset-5 col-md-7">
                <input type="submit" value="إضافة" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("عودة إلى قائمة العائلات", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/Scripts/familyFunctions.js", "~/bundles/jqueryval")
}
