@model SDS_SanadDistributedSystem.Models.family

@{
    ViewBag.Title = "إضافة عائلة";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<span style="position:fixed; bottom: 20px; left: 30px; z-index:99;"
      @*tabindex="0"
      data-toggle="tooltip"
      title="عودة إلى قائمة العائلات"*@
      class="shades">
    @Html.ActionLink(" ", "Index", null, new { @class = "btn btn-primary btn-rounded p-3 fa fa-list" })
</span>

<h2>إضافة عائلة جديدة</h2>

<div class="container-fluid">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <input type="hidden" name="iduser" id="iduser" />


        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="col-md-3">
                    <div class="md-form">
                        @Html.EditorFor(model => model.personcount, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.personcount, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.personcount, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="md-form">
                        @Html.EditorFor(model => model.family_head, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.family_head, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.family_head, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="md-form">
                        @Html.EditorFor(model => model.family_book_number, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.family_book_number, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.family_book_number, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="md-form">
                        @Html.EditorFor(model => model.lastname, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.lastname, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.lastname, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>



            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-4"><label class="control-label">نوع السكن</label></div>
                        <div class="col-md-8">
                            @Html.DropDownList("addressTypeID", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>                
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-4"><label class="control-label" for="currentAddressID">العنوان الحالي</label></div>
                        <div class="col-md-8">
                            @Html.DropDownList("currentAddressID", null, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                
                @if (User.IsInRole("mobileTeamReceptionist"))
                {
                    
                        
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="col-md-4">@Html.LabelFor(model => model.sector, htmlAttributes: new { @class = "control-label" })</div>
                                <div class="col-md-8">
                                    @Html.DropDownList("sector", new SelectList(ViewBag.sectorValues), htmlAttributes: new { @class = "" })
                                </div>
                            </div>
                        </div>
                        
                    
                    
                }
                
            </div>
            <div class="row">
                <div class="col-md-4"></div>
                <div class="col-md-4">
                    <div class="md-form">
                        @Html.EditorFor(model => model.currentaddress_details, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.currentaddress_details, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.currentaddress_details, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-4">@Html.LabelFor(model => model.familynature, htmlAttributes: new { @class = "control-label" })</div>
                        <div class="col-md-8">
                            @Html.DropDownList("familynature", new SelectList(ViewBag.familynatureValues), htmlAttributes: new { @class = "" })
                            @*<select id="familynature" name="familynature" class="form-control">
                                    <option value="فرد من المجتمع المضيف">فرد من المجتمع المضيف</option>
                                    <option value="نازح داخلي">نازح داخلي</option>
                                    <option value="نازح داخلي عائد">نازح داخلي عائد</option>
                                    <option value="لاجئ عائد إلى سورية">لاجئ عائد إلى سورية</option>
                                    <option value="لاجئ أو طالب لجوء من دولة أخرى">لاجئ أو طالب لجوء من دولة أخرى</option>
                                </select>*@
                        </div>
                    </div>
                </div>
                <div class="col-md-4" id="lastaddress">
                    <div class="form-group">
                        <div class="col-md-4"><label class="control-label" for="previousAddressID">العنوان السابق</label></div>
                        <div class="col-md-8">@Html.DropDownList("previousAddressID", null, htmlAttributes: new { @class = "form-control" })</div>
                    </div>
                </div>
                
                <div class="col-md-4"></div>
                
                
                
                
                
                
               

                @*<div class="col-md-4 hidden" id="lastaddress">
                        <div class="md-form">
                            @Html.EditorFor(model => model.lastaddress, new { htmlAttributes = new { @class = "form-control validate" } })
                            @Html.LabelFor(model => model.lastaddress, htmlAttributes: new { })
                            @Html.ValidationMessageFor(model => model.lastaddress, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
            </div>
            <div class="row">
                <div id="displacementdate" class="col-md-4">
                    <label class="col-md-4">تاريخ النزوح</label>

                    <div class="md-form col-md-8">
                        @Html.EditorFor(model => model.displacementdate, new { htmlAttributes = new { @class = "form-control validate" } })
                        @* , @type = "text"  *@
                        @*@Html.LabelFor(model => model.displacementdate, htmlAttributes: new { })*@
                        @Html.ValidationMessageFor(model => model.displacementdate, "", new { @class = "text-danger" })
                    </div>

                </div>
                <div class="col-md-4" id="lastaddress_details">
                    <div class="md-form">
                        @Html.EditorFor(model => model.lastaddress_details, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.lastaddress_details, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.lastaddress_details, "", new { @class = "text-danger" })
                    </div>
                </div>
                
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="md-form">
                        @Html.EditorFor(model => model.phone1, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.phone1, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.phone1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="md-form">
                        @Html.EditorFor(model => model.phone1owner, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.LabelFor(model => model.phone1owner, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.phone1owner, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6">
                    <div class="md-form">
                        @Html.EditorFor(model => model.phone2, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.phone2, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.phone2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="md-form">
                        @Html.EditorFor(model => model.phone2owner, new { htmlAttributes = new { @class = "form-control validate" } })
                        @Html.LabelFor(model => model.phone2owner, htmlAttributes: new { })
                        @Html.ValidationMessageFor(model => model.phone2owner, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.iduser, "iduser", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("iduser", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.iduser, "", new { @class = "text-danger" })
                    </div>
                </div>*@


            @*<hr />*@
            <div class="row hidden">
                <div class="col-md-2">
                    @Html.LabelFor(model => model.evaluation, htmlAttributes: new { })
                </div>
                <div>
                    <div class="range-field">
                        <input type="range" name="evaluation" id="evaluation" min="0" max="100" value="0" />
                    </div>
                </div>

            </div>
            @*<hr />*@
            <div class="row"></div>
            <div class="row">
                @*@Html.LabelFor(model => model.evaluation, htmlAttributes: new { @class = "control-label" })

                    <div class="md-form">

                        @Html.RadioButtonFor(model => model.evaluation, 0, new { @id = "e" + 0, @checked = "checked" })
                        @Html.Label(0 + " %", new { @for = "e" + 0 })
                        @foreach (int item in ViewBag.evaluationValues)
                        {
                            @Html.RadioButtonFor(model => model.evaluation, item, new { @id = "e" + item })
                            @Html.Label(item + " %", new { @for = "e" + item })
                        }
                        @Html.ValidationMessageFor(model => model.evaluation, "", new { @class = "text-danger" })
                    </div>*@
            </div>

            <div class="row">
                <div class="md-form">
                    @Html.TextAreaFor(model => model.note, new { @type = "text", @id = "note", @class = "md-textarea" })
                    @Html.LabelFor(model => model.note, htmlAttributes: new { @for = "note" })
                    @Html.ValidationMessageFor(model => model.note, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="md-form">
                <div class="col-md-offset-5 col-md-7">

                    <input type="submit" value="إضافة" class="btn btn-default btn-rounded p-1" />
                </div>
            </div>
        </div>
    }

</div>

@*<div>
        @Html.ActionLink("عودة إلى قائمة العائلات", "Index")
    </div>*@

@section Scripts {
    @Scripts.Render("~/Scripts/familyFunctions.js", "~/bundles/jqueryval")
}
