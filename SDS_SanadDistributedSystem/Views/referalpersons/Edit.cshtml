@model SDS_SanadDistributedSystem.Models.referalperson

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //Layout = "_referallayout.cshtml";
}
<head>

    <link href="~/Content/cardview.css" rel="stylesheet" />

</head>
<h2></h2>
<section class="form-simple centered-content  ">

    <!--Form with header-->
    <div class="card" style="width: 100%; padding:15px; align-items:center">

        <!--Header-->
        <div class="header pt-3 grey centered-wrapper">

            <div class="row d-flex justify-content-start">
                <h4 class="deep-grey-text mt-3 mb-4 pb-1 mx-5 fa fa-edit" style="font-size:3rem ;color:#fff"><b> تعديل بيانات الإحالة - <span style="font-size:2rem ;color:#fff"> الإحالة @ViewBag.state</span></b></h4>
                @*<h5 class="deep-grey-text mt-3 mb-4 pb-1 mx-3 "style="font-size:2rem ;color:#fff"><b> إحالة @ViewBag.state</b></h5>*@
            </div>
        </div>
        @{
            var item=Model.person;
            var name = Model.person.fname + " " + Model.person.lname;
            var gender = Model.person.gender;
            }
        @*@using (Html.BeginForm())
        {*@
            <form action="" method="post">
                @Html.AntiForgeryToken()
                @if (gender == "ذكر")
            {<h3><b>تعديل إحالة السيد @name </b></h3>}
            else
            {   <h3><b>تعديل إحالة السيدة @name </b></h3>}
                <div class="form-horizontal centered-wrapper">
                  
              
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.idreferalperson)

                    @Html.HiddenFor(model => model.idperson_FK)

                    @Html.HiddenFor(model => model.idcase_FK)
                    @Html.HiddenFor(model => model.submittingdate)
                    @Html.HiddenFor(model => model.referalsender_FK)
                    @Html.HiddenFor(model => model.idcenter_FK)
                    @Html.HiddenFor(model => model.senderevalution)
                    @Html.HiddenFor(model => model.referaldate)
                    @Html.HiddenFor(model => model.referaldate)
                    @Html.HiddenFor(model => model.servicestate)
                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.idservice_FK, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.DropDownList("idservice_FK", null, htmlAttributes: new { @class = "form-control", @onchange = "FillRecivers_EDIT()" })
                            @Html.ValidationMessageFor(model => model.idservice_FK, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.submittingdate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.submittingdate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.submittingdate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group col-md-4">
                            @Html.LabelFor(model => model.servicestate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-4">
                                @Html.DropDownList("servicestate", null, htmlAttributes: new { @class = "form-control", @onchange = "FillReferalStateDropdown()" })
                                @Html.ValidationMessageFor(model => model.servicestate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.referalstate, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-4">
                                @Html.DropDownList("referalstate", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.referalstate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.referalreicver_FK, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.DropDownList("referalReciver_FK", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.referalreicver_FK, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @*<div class=" col-md-4">

                            <div class="md-form">
                                @Html.EditorFor(model => model.referaldate, new { htmlAttributes = new { @class = "form-control validate" } })
                                @Html.LabelFor(model => model.referaldate, htmlAttributes: new { })
                                @Html.ValidationMessageFor(model => model.referaldate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@


                    <div class=" col-md-4">

                        <div class="md-form">
                            @Html.EditorFor(model => model.servicestartdate, new { htmlAttributes = new { @class = "form-control validate" } })
                            @Html.LabelFor(model => model.servicestartdate, htmlAttributes: new { })
                            @Html.ValidationMessageFor(model => model.servicestartdate, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class=" col-md-4">

                        <div class="md-form">
                            @Html.EditorFor(model => model.serviceenddate, new { htmlAttributes = new { @class = "form-control validate" } })
                            @Html.LabelFor(model => model.serviceenddate, htmlAttributes: new { })
                            @Html.ValidationMessageFor(model => model.serviceenddate, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    @*<div class="form-group">
                            @Html.LabelFor(model => model.referalsender_FK, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("referalsender_FK", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.referalsender_FK, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.senderevalution, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.senderevalution, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.senderevalution, "", new { @class = "text-danger" })
                            </div>
                        </div>*@


                    @*<div class="col-md-4">
                            <div class="md-form">
                                @Html.EditorFor(model => model.senderevalution, new { htmlAttributes = new { @class = "form-control validate" } })
                                @Html.LabelFor(model => model.senderevalution, htmlAttributes: new { })
                                @Html.ValidationMessageFor(model => model.senderevalution, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.recieverevalution, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.recieverevalution, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.recieverevalution, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="col-md-4">
                        <div class="md-form">
                            @Html.EditorFor(model => model.recieverevalution, new { htmlAttributes = new { @class = "form-control validate col-md-4" } })
                            @Html.LabelFor(model => model.recieverevalution, htmlAttributes: new { })
                            @Html.ValidationMessageFor(model => model.recieverevalution, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.idcenter_FK, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idcenter_FK", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.idcenter_FK, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.outreachnote, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.outreachnote, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.outreachnote, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="col-md-4">
                        <div class="md-form">
                            @Html.EditorFor(model => model.outreachnote, new { htmlAttributes = new { @class = "form-control validate col-md-4" } })
                            @Html.LabelFor(model => model.outreachnote, htmlAttributes: new { })
                            @Html.ValidationMessageFor(model => model.outreachnote, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="submit" value="معلقة" class="btn btn-default" name="action:edit1"  />
                            <input type="submit" value="مقبولة ولم يخدم" class="btn btn-default" name="action:edit2"  />
                            <input type="submit" value="مقبولة ولم يخدم-وصول" class="btn btn-default" name="action:edit3"  />
                            <input type="submit" value="مرفوضة" class="btn btn-default" name="action:edit4" />
                            <input type="submit" value="قيد المتابعة" class="btn btn-default" name="action:edit5"  />
                            <input type="submit" value="قيد المتابعة-وصول" class="btn btn-default" name="action:edit6"  />
                            <input type="submit" value="مغلقة" class="btn btn-default" name="action:edit7" />
                            <input type="submit" value="مغلقة-وصول" class="btn btn-default" name="action:edit8" />
                            <input type="submit" value="خارجية" class="btn btn-default" name="action:edit9" />
                        </div>
                    </div>
                </div>
                @*}*@
                </form>
</div>


    <!--/Form with header-->

</section>
<div>
    @Html.ActionLink("عودة إلى القائمة", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
  <script>

      $(document).ready(function () {
          FillReferalStateDropdown();
      });
    </script>
}
