@model SDS_SanadDistributedSystem.Models.referalperson

@{
    ViewBag.Title = "personReferal";
    Layout = "~/Views/Shared/_Layout.cshtml";
    //Layout = "_referallayout.cshtml";
}

@functions
{
    public SelectList SayHello()
    {
        return ViewBag.idcase_FK;
    }
    //string id, SelectList s
    //SelectList ssss = s;

}
<!DOCTYPE HTML>
<html>
<head>

    <link href="~/Content/cardview.css" rel="stylesheet" />

</head>
<body>




    @*@using (Ht.BeginForm("personReferal", "referalpersons", new AjaxOptions { OnSuccess = "successFillTable", OnFailure = "OnFailureFillTable" }))*@
    @{
        var name = Model.person.fname + " " + Model.person.lname;

        var birthday = Model.person.birthday.Value.ToShortDateString();
        var birthplace = Model.person.birthplace;
        var currentaddress = Model.person.currentaddress;

        var fathername = Model.person.fathername;
        var mothername = Model.person.mothername;
        var nationality = Model.person.nationality;

    }

    <section class="form-simple centered-content  ">

        <!--Form with header-->
        <div class="card" style="width: 100%; padding:15px; align-items:center">

            <!--Header-->
            <div class="header pt-3 grey lighten-2 centered-wrapper">

                <div class="row d-flex justify-content-start">
                    <h2 class="deep-grey-text mt-3 mb-4 pb-1 mx-5 "><b> إضافة إحالات</b></h2>
                </div>
            </div>


            <h3><b>*إضافة إحالة ل @name </b></h3>
            <hr />

            <div class="form-group">

                <div class="col-md-12">
                    <div class="col-md-4">
                        <b>  الاسم الثلاثي :@name</b>
                    </div>
                    <div class="col-md-2">
                        <b>  اسم الإب: @fathername</b>
                    </div>
                    <div class="col-md-3">
                        <b>  اسم الأم: @mothername</b>
                    </div>
                    <div class="col-md-3">
                        <b> تاريخ الميلاد: @birthday</b>
                    </div>
                </div>
                <div class="clearfix">
                    <br />
                    <br />
                </div>
                <div class="co-md-12">
                    <div class="col-md-4">
                        <b>  مكان الولادة:@birthplace</b>
                    </div>
                    <div class="col-md-2">
                        <b>  الجنسية:@nationality</b>
                    </div>
                    <div class="col-md-6">
                        <b>   العنوان الحالي:@currentaddress</b>
                    </div>

                </div>
            </div>

            <div class="col-md-12">

                <hr />
                <h4>*بيانات الإحالة </h4>
                <br />
            </div>



            @using (Html.BeginForm())
            {

                @Html.AntiForgeryToken()
                @Html.HiddenFor(model => model.idperson_FK, new { Value = Model.person.idperson });
                <div class="form-horizontal centered-wrapper">


                    @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group col-md-4">
                            @Html.LabelFor(model => model.idperson_FK, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-4">
                                @Html.DropDownList("idperson_FK", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.idperson_FK, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.idcase_FK, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.DropDownList("idcase_FK", null, htmlAttributes: new { @class = "form-control", @onchange = "FillServices()" })
                            @Html.ValidationMessageFor(model => model.idcase_FK, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.idservice_FK, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4 ">
                            <i>
                                @Html.DropDownList("services", null, htmlAttributes: new { @class = "form-control", @onchange = "FillRecivers()" })

                                @*@Html.DropDownList("cmEducation", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmProfessional", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmChildProtection", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmPsychologicalSupport1", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmPsychologicalSupport2", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmPsychologicalSupport3", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmDayCare", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmHomeCare", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmSGBV", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmSmallProjects", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmIOutReachTeam", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.DropDownList("cmInkindAssistance", null, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.idservice_FK, "", new { @class = "text-danger" })*@
                            </i>
                        </div>
                    </div>

                    <div class="form-group col-md-4">
                        @Html.LabelFor(model => model.referalreicver_FK, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-4">
                            @Html.DropDownList("referalReciver_FK", null, htmlAttributes: new { @class = "form-control", @onchange = "" })
                            @Html.ValidationMessageFor(model => model.idcase_FK, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.submittingdate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.submittingdate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.TextBoxFor(model => model.submittingdate, new { @class = "form-control", @Value = @DateTime.Now.ToString("yyyy-MM-dd"), @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.submittingdate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.referalstate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("referalstate",null, htmlAttributes : new { @class = "form-control", @readonly = "readonly" } )
                                @Html.ValidationMessageFor(model => model.referalstate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.referaldate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.referaldate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.referaldate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.servicestate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("servicestate", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.servicestate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.servicestartdate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.servicestartdate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.servicestartdate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.serviceenddate, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.serviceenddate, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.serviceenddate, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.referalsender_FK, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("referalsender_FK", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.referalsender_FK, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.senderevalution, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.senderevalution, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.senderevalution, "", new { @class = "text-danger" })
                            </div>
                        </div>*@
                    <div class="col-md-6">
                        <div class="md-form">
                            @Html.EditorFor(model => model.senderevalution, new { htmlAttributes = new { @class = "form-control validate col-md-6" } })
                            @Html.LabelFor(model => model.senderevalution, htmlAttributes: new { })
                            @Html.ValidationMessageFor(model => model.senderevalution, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    @*<div class="form-group">
                            @Html.LabelFor(model => model.recieverevalution, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.recieverevalution, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.recieverevalution, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.idcenter_FK, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idcenter_FK", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.idcenter_FK, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="col-md-6">
                        <div class="md-form">
                            @Html.EditorFor(model => model.outreachnote, new { htmlAttributes = new { @class = "form-control validate col-md-6" } })
                            @Html.LabelFor(model => model.outreachnote, htmlAttributes: new { })
                            @Html.ValidationMessageFor(model => model.outreachnote, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12">
                            <input type="button" value="إضافة" class="btn btn-default centered-content " onclick="successFillTableNew()" />
                        </div>
                    </div>
                </div>
            }



        </div>


        <!--/Form with header-->

    </section>
    <div class="card" style="width: 100%; padding:15px; align-items:center">
        <div class="form-group">
            <table id="myTable" class="display table table-bordered" cellspacing="0">
                <thead>
                    <tr>
                        <th>الرقم التسلسلي</th>
                        <th>مدير الإحالة</th>
                        <th>الخدمة</th>
                        <th>التقييم الأولي</th>
                        <th>المستقبل</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody></tbody>
            </table>
        </div>
        <div>
            @*@using (Ajax.BeginForm("sendReferals", "referalpersons", new AjaxOptions { OnSuccess = "successSendReferals", OnFailure = "OnFailureSendReferals" }))*@
            @using (Html.BeginForm())
            {

                @Html.AntiForgeryToken()

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="button" value="حفظ" class="btn btn-default" onclick="successSendReferals()" />
                    </div>
                </div>

            }
        </div>
        @Html.ActionLink("عودة إلى قائمة الإحالات", "Index")
    </div>

</body>
</html>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
  
}


